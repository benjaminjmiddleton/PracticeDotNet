@page "/"
@inject ApiService apiService

<PageTitle>Home</PageTitle>

<h1>Library Frontend</h1>

<h2>Book Lookup</h2>
<label for="getIsbn">ISBN:</label>
<br>
<input @bind="_getIsbnInput" type="number" id="getIsbn" name="getIsbn">
<br>
<button class="btn btn-primary" @onclick="GetBook">Search</button>
<br />
<br />

@if (_book is not null)
{
    <p>
        ISBN: @_book.Id
        <br />
        Title: @_book.Title
        @* <br />
        Authors:
        @for (int i = 0; i < _book.Authors.Count; i++)
        {
            string text = "";
            if (i != 0)
                text = ", " + _book.Authors.ElementAt(i);
            else
                text = _book.Authors.ElementAt(i);
            @text
        } *@
        <br />
        Checked Out: @_book.CheckedOut
        <br />
        <br />
    </p>
}

<h2>Book Check Out/Return</h2>
<label for="putIsbn">ISBN:</label>
<br>
<input @bind="_putIsbnInput" type="number" id="putIsbn" name="putIsbn">
<br>
<button class="btn btn-primary" @onclick="CheckOutBook">Check Out</button>
<br>
<button class="btn btn-primary" @onclick="ReturnBook">Return</button>
<br />
<br />

<h2>Add A Book</h2>
<label for="postIsbn">ISBN:</label>
<br>
<input @bind="_postIsbnInput" type="number" id="postIsbn" name="postIsbn">
<br>
<label for="postTitle">Title:</label>
<br>
<input @bind="_postTitleInput" type="text" id="postTitle" name="postTitle">
<br>
<label for="postCheckedOut">Checked Out:</label>
<br>
<input @bind="_postCheckedOutInput" type="checkbox" id="postCheckedOut" name="postCheckedOut">
<br>
<button class="btn btn-primary" @onclick="PostBook">Add</button>
<br />
<br />

<h2>See All Books</h2>
<button class="btn btn-primary" @onclick="GetBooks">Get All Books</button>

@if (_books is not null)
{
    <ul>
    @foreach (Book b in _books)
    {
        <li>
        ISBN: @b.Id
        <br />
        Title: @b.Title
        @* <br />
        Authors: 
        @for(int i=0; i<b.Authors.Count; i++)
        {
            string text = "";
            if (i != 0)
                text = ", " + b.Authors.ElementAt(i);
            else
                text = b.Authors.ElementAt(i);
            @text
        } *@
        <br />
        Checked Out: @b.CheckedOut
        <br />
        <br />
        </li>
    }
    </ul>
}

@code {
    private List<Book>? _books;
    private Book? _book;
    private long _getIsbnInput;
    private long _postIsbnInput;
    private string? _postTitleInput;
    private bool _postCheckedOutInput;
    private long _putIsbnInput;

    private async Task GetBooks()
    {
        _books = await apiService.HttpClient.GetFromJsonAsync<List<Book>>("Books");
    }

    private async Task GetBook()
    {
        _book = await apiService.HttpClient.GetFromJsonAsync<Book>($"Books/{_getIsbnInput}");
    }

    private async Task PostBook()
    {
        Book bookToPost = new Book {
            Id = _postIsbnInput,
            Title = _postTitleInput,
            CheckedOut = _postCheckedOutInput
        };
        await apiService.HttpClient.PostAsJsonAsync<Book>("Books", bookToPost);
        if (_books is not null)
            await GetBooks();
    }

    private async Task CheckOutBook()
    {
        await apiService.HttpClient.PutAsync($"Books/{_putIsbnInput}?checkedOut=true", null);
        if (_books is not null)
            await GetBooks();
    }

    private async Task ReturnBook()
    {
        await apiService.HttpClient.PutAsync($"Books/{_putIsbnInput}?checkedOut=false", null);
        if (_books is not null)
            await GetBooks();
    }
}